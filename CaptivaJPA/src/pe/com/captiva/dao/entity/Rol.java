package pe.com.captiva.dao.entity;

// Generated 21/10/2015 10:31:13 PM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Rol generated by hbm2java
 */
@Entity
@Table(name = "rol", schema = "soul")
public class Rol implements java.io.Serializable {

	private String codRol;
	private Proyecto proyecto;
	private Character estado;
	private String descripcion;
	private Set<Mantenimiento> mantenimientos = new HashSet<Mantenimiento>(0);

	public Rol() {
	}

	public Rol(String codRol, String descripcion) {
		this.codRol = codRol;
		this.descripcion = descripcion;
	}

	public Rol(String codRol, Proyecto proyecto, Character estado,
			String descripcion, Set<Mantenimiento> mantenimientos) {
		this.codRol = codRol;
		this.proyecto = proyecto;
		this.estado = estado;
		this.descripcion = descripcion;
		this.mantenimientos = mantenimientos;
	}

	@Id
	@Column(name = "cod_rol", unique = true, nullable = false, length = 100)
	public String getCodRol() {
		return this.codRol;
	}

	public void setCodRol(String codRol) {
		this.codRol = codRol;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_proyecto")
	public Proyecto getProyecto() {
		return this.proyecto;
	}

	public void setProyecto(Proyecto proyecto) {
		this.proyecto = proyecto;
	}

	@Column(name = "estado", length = 1)
	public Character getEstado() {
		return this.estado;
	}

	public void setEstado(Character estado) {
		this.estado = estado;
	}

	@Column(name = "descripcion", nullable = false)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "mantenimiento_rol", schema = "soul", joinColumns = { @JoinColumn(name = "cod_rol", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "cod_mantenimiento", nullable = false, updatable = false) })
	public Set<Mantenimiento> getMantenimientos() {
		return this.mantenimientos;
	}

	public void setMantenimientos(Set<Mantenimiento> mantenimientos) {
		this.mantenimientos = mantenimientos;
	}

}
