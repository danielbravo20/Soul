package pe.com.captiva.dao.entity;
// Generated 01/12/2015 04:35:12 PM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Consulta generated by hbm2java
 */
@Entity
@Table(name = "consulta", schema = "soul")
public class Consulta implements java.io.Serializable {

	private int codConsulta;
	private Proyecto proyecto;
	private String nombre;
	private char esReporte;
	private String nombreReporte;
	private Set<ConsultaAtributo> consultaAtributos = new HashSet<ConsultaAtributo>(0);
	private Set<Tarea> tareasForCodConTrabajar = new HashSet<Tarea>(0);
	private Set<Proceso> procesosForCodConResumen = new HashSet<Proceso>(0);
	private Set<Proceso> procesosForCodConDetalle = new HashSet<Proceso>(0);
	private Set<ConsultaTabla> consultaTablas = new HashSet<ConsultaTabla>(0);
	private Set<Tarea> tareasForCodConCompletar = new HashSet<Tarea>(0);

	public Consulta() {
	}

	public Consulta(int codConsulta, Proyecto proyecto, String nombre, char esReporte) {
		this.codConsulta = codConsulta;
		this.proyecto = proyecto;
		this.nombre = nombre;
		this.esReporte = esReporte;
	}

	public Consulta(int codConsulta, Proyecto proyecto, String nombre, char esReporte, String nombreReporte,
			Set<ConsultaAtributo> consultaAtributos, Set<Tarea> tareasForCodConTrabajar,
			Set<Proceso> procesosForCodConResumen, Set<Proceso> procesosForCodConDetalle,
			Set<ConsultaTabla> consultaTablas, Set<Tarea> tareasForCodConCompletar) {
		this.codConsulta = codConsulta;
		this.proyecto = proyecto;
		this.nombre = nombre;
		this.esReporte = esReporte;
		this.nombreReporte = nombreReporte;
		this.consultaAtributos = consultaAtributos;
		this.tareasForCodConTrabajar = tareasForCodConTrabajar;
		this.procesosForCodConResumen = procesosForCodConResumen;
		this.procesosForCodConDetalle = procesosForCodConDetalle;
		this.consultaTablas = consultaTablas;
		this.tareasForCodConCompletar = tareasForCodConCompletar;
	}

	@Id

	@Column(name = "cod_consulta", unique = true, nullable = false)
	public int getCodConsulta() {
		return this.codConsulta;
	}

	public void setCodConsulta(int codConsulta) {
		this.codConsulta = codConsulta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_proyecto", nullable = false)
	public Proyecto getProyecto() {
		return this.proyecto;
	}

	public void setProyecto(Proyecto proyecto) {
		this.proyecto = proyecto;
	}

	@Column(name = "nombre", nullable = false, length = 120)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "es_reporte", nullable = false, length = 1)
	public char getEsReporte() {
		return this.esReporte;
	}

	public void setEsReporte(char esReporte) {
		this.esReporte = esReporte;
	}

	@Column(name = "nombre_reporte", length = 120)
	public String getNombreReporte() {
		return this.nombreReporte;
	}

	public void setNombreReporte(String nombreReporte) {
		this.nombreReporte = nombreReporte;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consulta")
	public Set<ConsultaAtributo> getConsultaAtributos() {
		return this.consultaAtributos;
	}

	public void setConsultaAtributos(Set<ConsultaAtributo> consultaAtributos) {
		this.consultaAtributos = consultaAtributos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consultaByCodConTrabajar")
	public Set<Tarea> getTareasForCodConTrabajar() {
		return this.tareasForCodConTrabajar;
	}

	public void setTareasForCodConTrabajar(Set<Tarea> tareasForCodConTrabajar) {
		this.tareasForCodConTrabajar = tareasForCodConTrabajar;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consultaByCodConResumen")
	public Set<Proceso> getProcesosForCodConResumen() {
		return this.procesosForCodConResumen;
	}

	public void setProcesosForCodConResumen(Set<Proceso> procesosForCodConResumen) {
		this.procesosForCodConResumen = procesosForCodConResumen;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consultaByCodConDetalle")
	public Set<Proceso> getProcesosForCodConDetalle() {
		return this.procesosForCodConDetalle;
	}

	public void setProcesosForCodConDetalle(Set<Proceso> procesosForCodConDetalle) {
		this.procesosForCodConDetalle = procesosForCodConDetalle;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consulta")
	public Set<ConsultaTabla> getConsultaTablas() {
		return this.consultaTablas;
	}

	public void setConsultaTablas(Set<ConsultaTabla> consultaTablas) {
		this.consultaTablas = consultaTablas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consultaByCodConCompletar")
	public Set<Tarea> getTareasForCodConCompletar() {
		return this.tareasForCodConCompletar;
	}

	public void setTareasForCodConCompletar(Set<Tarea> tareasForCodConCompletar) {
		this.tareasForCodConCompletar = tareasForCodConCompletar;
	}

}
